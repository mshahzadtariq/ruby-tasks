star = Proc.new do |sp,st|
  sp.times { print " " }
  st.times { print "*" }
end

arrow_proc = Proc.new do |i,direction,max|
  case direction
    when "right"
      0.upto(max/2) {|j| print "*" if (i>j and i<=max/2) or (i>max/2 and i-(max/2)<j) }
    when "left"
      sp,st = ((max/2)-i),i if i<=max/2
      sp,st = (i-max/2),(max-i) if i > max/2
      star.call sp,st
    when "up"
      star.call max-i,(i*2)-1
    when "down"
      star.call i,((max-i)*2)-1
  end

end

def half_arrow(max,direction,arrow)
  puts direction
  0.upto(max) do |i|
    arrow.call(i,direction,max)
    puts
  end
end

namespace :arrow do
  task :up do
    half_arrow(10,"up",arrow_proc)
  end

  task :down do
    half_arrow(10,"down",arrow_proc)
  end

  task :left do
    half_arrow(10,"left",arrow_proc)
  end

  task :right do
    half_arrow(10,"right",arrow_proc)
  end

  task :all do
    Rake::Task['arrow:up'].invoke
    Rake::Task['arrow:down'].invoke
    Rake::Task['arrow:left'].invoke
    Rake::Task['arrow:right'].invoke
  end
end
task :default => 'arrow:all'